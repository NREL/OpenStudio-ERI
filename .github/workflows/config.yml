name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ synchronize, opened ]
  workflow_dispatch:

jobs:
  run-unit-tests:
    runs-on: ubuntu-latest
    container:
      image: docker://nrel/openstudio:3.4.0
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install software
        run: |
          rm -f Gemfile.lock && bundle install
          sudo apt update
          sudo apt-get install -y wget unzip libxml2-utils python3-lxml python3-pip
          sudo pip3 install sphinx sphinx-rtd-theme

      - name: XSD validation
        shell: bash
        run: |
          export XSDPATH=hpxml-measures/HPXMLtoOpenStudio/resources/hpxml_schema/HPXML.xsd
          for xmlfile in workflow/sample_files/*.xml; do xmllint --schema $XSDPATH $xmlfile --noout; done

      - name: Schematron validation
        shell: bash
        run: |
          export PYTHONIOENCODING=utf8
          export SCTPATH=rulesets/301EnergyRatingIndexRuleset/resources/301validator.xml
          for xmlfile in workflow/sample_files/*.xml; do XMLPATH=$xmlfile python3 -c "import os; import sys; from lxml import isoschematron, etree; from pathlib import Path; sct = Path(os.environ.get('SCTPATH')).read_text(); sct_doc = etree.fromstring(bytes(sct, encoding='utf-8')); schematron = isoschematron.Schematron(sct_doc, store_report = True); xml_path = os.environ.get('XMLPATH'); xml = Path(xml_path).read_text(); xml_doc = etree.fromstring(bytes(xml, encoding='utf-8')); valid = schematron.validate(xml_doc); (not valid) and print(schematron.validation_report); (not valid) and print(f'{xml_path} fails to validate'); valid and print(f'{xml_path} validates'); (not valid) and sys.exit(1)"; done

      - name: Run measure unit tests
        run: |
          bundle exec rake test_measures

      - name: Store code coverage
        uses: actions/upload-artifact@v2
        with:
          path: coverage
          name: coverage

      - name: Build documentation
        run: |
          cd docs
          make html SPHINXOPTS="-W --keep-going -n"

      - name: Save Docs
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: docs/_build/html/

  run-eri-tests:
    runs-on: ubuntu-latest
    container:
      image: docker://nrel/openstudio:3.4.0
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install software
        run: |
          rm -f Gemfile.lock && bundle install

      - name: Run ERI tests
        run: |
          bundle exec rake test_eri

      - name: Store results
        uses: actions/upload-artifact@v2
        with:
          path: workflow/tests/test_results
          name: test_results_eri

  run-real-home-tests:
    runs-on: ubuntu-latest
    container:
      image: docker://nrel/openstudio:3.4.0
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install software
        run: |
          rm -f Gemfile.lock && bundle install

      - name: Run Real Home tests
        run: |
          bundle exec rake test_real_homes

      - name: Store results
        uses: actions/upload-artifact@v2
        with:
          path: workflow/tests/test_real_homes
          name: test_results_real_homes

  run-resnet-tests:
    runs-on: ubuntu-latest
    container:
      image: docker://nrel/openstudio:3.4.0
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install software
        run: |
          rm -f Gemfile.lock && bundle install

      - name: Run RESNET tests
        run: |
          bundle exec rake test_resnet

      - name: Store results
        uses: actions/upload-artifact@v2
        with:
          path: workflow/tests/test_results
          name: test_results_resnet

  run-epa-tests:
    runs-on: ubuntu-latest
    container:
      image: docker://nrel/openstudio:3.4.0
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install software
        run: |
          rm -f Gemfile.lock && bundle install

      - name: Run EPA tests
        run: |
          bundle exec rake test_epa

      - name: Store results
        uses: actions/upload-artifact@v2
        with:
          path: workflow/tests/test_results
          name: test_results_epa

  run-windows-tests:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Install software and run test
        shell: pwsh
        run: |
          $env:OS_VERSION="3.4.0"
          $env:OS_SHA="4bd816f785"
          Invoke-WebRequest -OutFile Windows.tar.gz -URI "https://github.com/NREL/OpenStudio/releases/download/v${env:OS_VERSION}/OpenStudio-${env:OS_VERSION}+${env:OS_SHA}-Windows.tar.gz"
          tar -xzf Windows.tar.gz
          & .\OpenStudio-${env:OS_VERSION}+${env:OS_SHA}-Windows\bin\openstudio.exe workflow\energy_rating_index.rb -x workflow\sample_files\base.xml --hourly ALL --add-component-loads

  compare-results:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [run-eri-tests, run-real-home-tests, run-resnet-tests, run-epa-tests]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Store base results
        uses: actions/upload-artifact@v2
        with:
          path: workflow/tests/base_results
          name: base_results

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Download base results
        uses: actions/download-artifact@v2
        with:
          path: |
            base_results
          name: base_results

      - name: Download ERI feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: test_results_eri

      - name: Download Real Home feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: test_results_real_homes

      - name: Download RESNET feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: test_results_resnet

      - name: Download EPA feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: test_results_epa

      - name: Compare results
        run: |
          cp -r base_results/*.csv workflow/tests/base_results
          mkdir workflow/tests/results
          cp -r results/*.csv workflow/tests/results
          
          pip install numpy
          pip install pandas
          pip install plotly
          pip install kaleido
          
          python hpxml-measures/workflow/tests/compare.py -a results
          python hpxml-measures/workflow/tests/compare.py -a visualize

      - name: Store comparisons
        uses: actions/upload-artifact@v2
        with:
          path: workflow/tests/comparisons
          name: comparisons

  update-results:
    runs-on: ubuntu-latest
    needs: [run-eri-tests, run-real-home-tests, run-resnet-tests, run-epa-tests]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Download ERI feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: test_results_eri

      - name: Download Real Home feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: test_results_real_homes

      - name: Download RESNET feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: test_results_resnet

      - name: Download EPA feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: test_results_epa

      - name: Commit latest results
        shell: bash        
        run: |
          branch_name="${{ github.head_ref }}"
          git pull origin $branch_name
          cp -r results/*.csv workflow/tests/base_results
          git add workflow/tests/base_results
          git status
          if [[ $(git diff --cached --exit-code) ]]; then
            git config --global user.email "github-action@users.noreply.github.com"
            git config --global user.name "GitHub Action"
            git commit -m "Latest results."
            echo "Pushing to branch: $branch_name"
            git push -u origin $branch_name
          fi
